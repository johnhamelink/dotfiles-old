" vim:fdm=marker

" neobundle {{{
if has('vim_starting')
  set nocompatible
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

" Let Vundle handle itsself!
NeoBundleFetch 'Shougo/neobundle.vim'


NeoBundle 'Shougo/vimproc', {
      \ 'build' : {
      \     'windows' : 'make -f make_mingw32.mak',
      \     'cygwin' : 'make -f make_cygwin.mak',
      \     'mac' : 'make -f make_mac.mak',
      \     'unix' : 'make -f make_unix.mak',
      \    },
      \ }
" }}}
" vim-airline {{{

" Lean & mean status/tabline for vim that's
" Light as air
NeoBundle 'bling/vim-airline'
set laststatus=2
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled = 0

" }}}
" TextObjects {{{
runtime macros/matchit.vim

" Makes columnising easy
NeoBundle "godlygeek/tabular"

" Surround stuff with stuff
NeoBundle 'tpope/vim-surround'

" Make your own textobjects
NeoBundle 'kana/vim-textobj-user'

NeoBundle 'terryma/vim-multiple-cursors'
" }}}
" XPTemplate {{{
" Code snippets engine
NeoBundle 'drmingdrmer/xptemplate'

" Custom xptemplate snippets
NeoBundle 'johnhamelink/custom-xptemplate-snippets'
" }}}
" Ruby & Rails {{{

" Syntax Highlighting for ActiveRecord,
" Rake Interface, Rails CLI Interface,
" Concern extraction (:Rextract {file}),
" Allows 'gf' to know about partials, fixtures,
" and more.
NeoBundle 'tpope/vim-rails'
" Vim-rake lets us use some of the
" rails functionality on non-rails
" ruby projects.
NeoBundle 'tpope/vim-rake'

" Various ruby-specific changes
NeoBundle 'vim-ruby/vim-ruby'

" Use vir/var to select in/around ruby
" blocks
NeoBundle 'nelstrom/vim-textobj-rubyblock'

" Bundler interface, supports 'gf' inside
" Gemfile.lock, and handy syntax highlighting
" for uninstalled gems.
NeoBundle 'tpope/vim-bundler'

" Adds 'end' to 'def', 'if', 'do'
NeoBundle 'tpope/vim-endwise'

" }}}
" Scala {{{

" Various scala-specific changes
NeoBundle 'derekwyatt/vim-scala'

" }}}
" Golang {{{

" Add autocompletion for golang
NeoBundle 'Blackrush/vim-gocode'

" }}}
" Brolink {{{
NeoBundle 'jaxbot/brolink.vim'
" Setup File Handlers
au BufWritePost *.html,*.js,*.php,*.erb,*.haml :BLReloadPage
au BufWritePost *.css,*.scss,*.sass,*.less :BLReloadCSS
" }}}
" Stylesheets {{{

" Syntax highlighting for scss files.
NeoBundle 'cakebaker/scss-syntax.vim'

NeoBundle 'Rykka/colorv.vim'

" }}}
" Markdown {{{

" Shortcuts for building markdown files
NeoBundle 'plasticboy/vim-markdown'

" }}}
" Git {{{

" Make merges nice in vim
NeoBundle 'sjl/splice.vim'

" Add a gutter with git changes in it.
NeoBundle 'airblade/vim-gitgutter'

" Gist integration
NeoBundle 'mattn/webapi-vim'
NeoBundle 'mattn/gist-vim'
" When sending code, copy resultant URL to the clipboard
if has("mac")
  let g:gist_clip_command = 'pbcopy'
elseif has("unix")
  let g:gist_clip_command = 'xclip -selection clipboard'
endif
let g:gist_open_browser_after_post = 1
" Private gists by default
let g:gist_private = 1

" }}}
" Welcome Screen {{{
" Disable welcome screen and use short messages
set shortmess=atTiOI
" }}}
" Tabs {{{

" Define what number of spaces a tab in a file counts for
  set tabstop=2

" The shiftwidth command controls how many columns text is indented
" with the reindent operations (<< and >>).
  set shiftwidth=2

" Set the number of spaces that a <Tab> counts for while
" performing editing operations, like inserting <Tab> or using
" <BS>.
  set softtabstop=2

" When in insert-mode, use the appropriate number of spaces
" to insert a <tab>
  set expandtab

" Copy indent from the line above when pressing enter
  set autoindent

" When starting a new line, vim should figure out the correct
" indent to start on. Apparently.
  set smartindent

" Indentation rules for languages according to their most used style
" guidelines. When in Rome.
NeoBundle "sdanielf/vim-stdtabs"

" }}}
" Search {{{

" Fuzzy finder supporting file,
" buffer, MRU, history, and a
" mixture.
NeoBundle 'kien/ctrlp.vim'

" Highlight search results
set hlsearch

" Show search matches as we type
set incsearch

" Ignore all of the below filetypes
set wildignore=*.swp,*.bak,*.pyc,*.class
set wildmode=longest:full,list:full

" For regular expressions turn magic on
set magic

" }}}
" Bell {{{

" Don't beep at me!
set visualbell
set noerrorbells
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

" }}}
" Leader {{{

" Set the mapleader to \ - this
" lets us use ctrlp's advanced
" stuff.
let mapleader="\\"
let g:mapleader="\\"

" }}}
" GUI {{{
NeoBundle 'chriskempson/base16-vim'
if has("gui_running")
  set background=dark
  colorscheme base16-ocean

  " On OSX, set the font to Meslo regular (for powerline) with height = 11
  if has("mac")
    set guifont=Meslo\ LG\ S\ Regular\ for\ Powerline:h11
  " On Linux we don't have the height syntax, so just have the number 9
  " straight after.
  elseif has("unix")
    set guifont=Meslo\ LG\ S\ DZ\ for\ Powerline\ 9
  endif
  " Remove gvim's chrome, I don't want a freaking menu
  set guioptions-=e
  set guioptions-=m
  set guioptions-=T
  set guioptions-=t
  set guioptions-=r
  set guioptions-=L
  set guicursor+=a:blinkon0
  " Show the internal vim tabs only if there's >1 tab open
  set stal=1
  " Full screen means FULL screen
  if has("mac")
    set fuoptions=maxvert,maxhorz
  endif
  " Turn off the visual bell
  set vb t_vb=
endif

" }}}
" NetRW {{{

" Automatically cd into the dir
" of the file in the buffer.
set autochdir

" Improve netrw
NeoBundle 'tpope/vim-vinegar'

" Hide the banner in netrw
let g:netrw_banner=0
" }}}
" EditorConfig {{{
" Override the defaults with a .editorconfig file if
" one exists.
NeoBundle 'editorconfig/editorconfig-vim'
" }}}
" Formatting {{{
" No word-wrap
set nowrap

" Show line numbers
set number


" Automagically hide trailing whitespace.
set listchars=tab:▒\ ,trail:⎵
set list

" }}}
" Buffer {{{

" Don't redraw while executing macros (good performance config)
set lazyredraw

" Resize splits when the window is resized
au VimResized * :wincmd =

" Resize buffer by +/- 10%
nnoremap <silent> <C-w>+ :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <C-w>- :exe "resize " . (winheight(0) * 2/3)<CR>

" }}}
" neobundle {{{
filetype plugin indent on

" Installation Check.
NeoBundleCheck
" }}}
